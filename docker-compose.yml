version: "3"

services:
    reverse-proxy:
        image: "jwilder/nginx-proxy:latest"
        container_name: "reverse-proxy"
        volumes: 
            - "html:/usr/share/nginx/html"
            - "dhparam:/etc/nginx/dhparam"
            - "vhost:/etc/nginx/vhost.d"
            - "certs:/etc/nginx/certs"
            - "/var/run/docker.sock:/tmp/docker.sock:ro"
        restart: "always"
        networks:
            - "nginx-proxy-net"
        ports:
            - "${HOST_PORT_HTTP}:80"
            - "${HOST_PORT_HTTPS}:443"
    lets-encrypt:
        image: "jrcs/letsencrypt-nginx-proxy-companion:latest"
        container_name: "lets-encrypt"
        volumes: 
            - "html:/usr/share/nginx/html"
            - "dhparam:/etc/nginx/dhparam"
            - "vhost:/etc/nginx/vhost.d"
            - "certs:/etc/nginx/certs"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        environment: 
            NGINX_PROXY_CONTAINER: "reverse-proxy"
            DEFAULT_EMAIL: "ahmad.harminto@ngoding-bae.my.id"
        restart: "always"
        depends_on:
            - "reverse-proxy"
        networks:
            - "nginx-proxy-net"
    whoami:
        image: "jwilder/whoami"
        container_name: "whoami"
        environment:
            - VIRTUAL_HOST=whoami.local # need to added into /etc/hosts on localhost, then test using cli : curl -H "Host: whoami.local" localhost:<HOST_PORT_HTTP>
        networks:
            - "nginx-proxy-net"
    nginx-dummy:
        image: "nginx:alpine"
        container_name: "nginx-dummy"
        restart: "unless-stopped"
        environment:
            - VIRTUAL_HOST=nginx-dummy.local.me # need to added into /etc/hosts on localhost
            - VIRTUAL_PORT=80
        networks:
            - "nginx-proxy-net"

volumes:
    certs:
    html:
    vhost:
    dhparam:

# need to add network first : docker network add <network-name>
networks:
    nginx-proxy-net:
        external: true